@echo off
REM FarmTally Jenkins Pipeline Workspace Path Validation Script (Windows)
REM This script validates that all required directories and files exist before build execution

echo 🔍 Validating FarmTally workspace structure...

set "validation_failed=false"

echo 📁 Checking directory structure...

REM Backend structure (repository root)
if exist "package.json" (
    echo ✅ Found: Backend package.json ^(repository root^)
) else (
    echo ❌ Missing: Backend package.json ^(repository root^)
    set "validation_failed=true"
)

if exist "src" (
    echo ✅ Found: Backend source directory
) else (
    echo ❌ Missing: Backend source directory
    set "validation_failed=true"
)

if exist "src\server.ts" (
    echo ✅ Found: Backend main server file
) else (
    echo ❌ Missing: Backend main server file
    set "validation_failed=true"
)

if exist "tsconfig.json" (
    echo ✅ Found: TypeScript configuration
) else (
    echo ❌ Missing: TypeScript configuration
    set "validation_failed=true"
)

if exist "prisma" (
    echo ✅ Found: Prisma database directory
) else (
    echo ❌ Missing: Prisma database directory
    set "validation_failed=true"
)

if exist "prisma\schema.prisma" (
    echo ✅ Found: Prisma schema file
) else (
    echo ❌ Missing: Prisma schema file
    set "validation_failed=true"
)

REM Frontend structure
if exist "farmtally-frontend" (
    echo ✅ Found: Frontend directory
) else (
    echo ❌ Missing: Frontend directory
    set "validation_failed=true"
)

if exist "farmtally-frontend\package.json" (
    echo ✅ Found: Frontend package.json
) else (
    echo ❌ Missing: Frontend package.json
    set "validation_failed=true"
)

if exist "farmtally-frontend\src" (
    echo ✅ Found: Frontend source directory
) else (
    echo ❌ Missing: Frontend source directory
    set "validation_failed=true"
)

if exist "farmtally-frontend\next.config.ts" (
    echo ✅ Found: Next.js configuration
) else (
    echo ❌ Missing: Next.js configuration
    set "validation_failed=true"
)

REM Build output directories (optional)
if exist "dist" (
    echo ✅ Found: Backend build output directory
) else (
    echo ⚠️  Optional: Backend build output directory not found
)

if exist "farmtally-frontend\.next" (
    echo ✅ Found: Frontend build output directory
) else (
    echo ⚠️  Optional: Frontend build output directory not found
)

echo 🔧 Validating build scripts...

findstr /C:"\"build\"" package.json >nul
if %errorlevel% equ 0 (
    echo ✅ Backend build script found
) else (
    echo ❌ Backend package.json missing 'build' script
    set "validation_failed=true"
)

findstr /C:"\"start\"" package.json >nul
if %errorlevel% equ 0 (
    echo ✅ Backend start script found
) else (
    echo ❌ Backend package.json missing 'start' script
    set "validation_failed=true"
)

findstr /C:"\"build\"" farmtally-frontend\package.json >nul
if %errorlevel% equ 0 (
    echo ✅ Frontend build script found
) else (
    echo ❌ Frontend package.json missing 'build' script
    set "validation_failed=true"
)

echo 🔍 Checking for common path issues...

if exist "backend" (
    echo ⚠️  Found 'backend' directory - this should not exist in current structure
    echo     Backend files should be in repository root
)

if exist "frontend" (
    echo ⚠️  Found 'frontend' directory - should be 'farmtally-frontend'
)

echo 📝 Generating path configuration...

(
echo # FarmTally Workspace Path Configuration
echo # Generated by validate-workspace-paths.bat
echo.
echo # Backend paths ^(repository root^)
echo BACKEND_ROOT=.
echo BACKEND_SRC=src
echo BACKEND_DIST=dist
echo BACKEND_PACKAGE_JSON=package.json
echo.
echo # Frontend paths
echo FRONTEND_ROOT=farmtally-frontend
echo FRONTEND_SRC=farmtally-frontend/src
echo FRONTEND_DIST=farmtally-frontend/.next
echo FRONTEND_STATIC=farmtally-frontend/out
echo FRONTEND_PACKAGE_JSON=farmtally-frontend/package.json
echo.
echo # Database paths
echo PRISMA_ROOT=prisma
echo PRISMA_SCHEMA=prisma/schema.prisma
echo.
echo # Build artifact paths
echo BACKEND_ARTIFACTS=dist/*
echo FRONTEND_ARTIFACTS=farmtally-frontend/.next/*,farmtally-frontend/out/*
echo.
echo # Validation timestamp
echo VALIDATION_TIMESTAMP=%date% %time%
) > workspace-paths.env

echo ✅ Path configuration saved to workspace-paths.env

echo ================================================

if "%validation_failed%"=="false" (
    echo 🎉 Workspace validation completed successfully!
    echo ✅ All required paths and files are present
    echo ✅ Build scripts are properly configured
    echo ✅ Path configuration generated
    exit /b 0
) else (
    echo ❌ Workspace validation failed!
    echo Please fix the issues above before running the pipeline
    exit /b 1
)